# yaml-language-server: $schema=../openapi-schema.json

# This file is human-written. It is used as a source to generate the gen.go and openapi.json files.
# The latest source of this file is in: https://github.com/Proximyst/cov/blob/main/pkg/api/health.yaml

openapi: '3.0.4'
info:
  title: cov Observability API
  description: The observability API for cov.
  version: 0.1.0

paths:
  /api/openapi.json:
    get:
      summary: OpenAPI specification (JSON)
      description: Get the OpenAPI specification for the API.
      operationId: openapi-json
      tags:
        - openapi
      responses:
        '200':
          description: Successfully retrieved OpenAPI specification
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /api/openapi.yaml:
    get:
      summary: OpenAPI specification (YAML)
      description: Get the OpenAPI specification for the API.
      operationId: openapi-yaml
      tags:
        - openapi
      responses:
        '200':
          description: Successfully retrieved OpenAPI specification
          content:
            application/yaml:
              schema:
                type: object
                additionalProperties: true
  /api/healthz:
    get:
      summary: Health check
      description: Check whether the service is healthy.
      operationId: healthz
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '500':
          description: Service is not healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /api/redoc:
    get:
      summary: Redoc documentation
      description: Get the Redoc documentation for the API.
      operationId: redoc
      tags:
        - openapi
        - documentation
      responses:
        '200':
          description: Successfully retrieved Redoc documentation
          content:
            text/html:
              schema:
                type: string
                format: html
  /api/scalar:
    get:
      summary: Scalar documentation
      description: Get the Scalar documentation for the API.
      operationId: scalar
      tags:
        - openapi
        - documentation
      responses:
        '200':
          description: Successfully retrieved Scalar documentation
          content:
            text/html:
              schema:
                type: string
                format: html
  /api/metrics:
    get:
      summary: Metrics
      description: Get the service metrics in Prometheus exposition format.
      operationId: metrics
      responses:
        '200':
          description: Successfully retrieved metrics
          content:
            text/plain:
              schema:
                type: string
                example: |
                  # HELP up Whether the service is up.
                  # TYPE up gauge
                  up 1

components:
  schemas:
    ErrorResponse:
      $ref: ../ErrorResponse.yaml
    HealthResponse:
      type: object
      description: A response indicating the health of the service.
      properties:
        status:
          type: string
          enum: ["healthy", "unhealthy"]
          example: "healthy"
          description: The overall health status of the service.
        components:
          type: object
          description: Each component's health status.
          additionalProperties:
            type: string
      required:
        - status
        - components
