// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: queries.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT
    id,
    email,
    username,
    display_name,
    password,
    created_at,
    updated_at
FROM users
WHERE email = $1
`

// Gets a user by their email.
//
//	SELECT
//	    id,
//	    email,
//	    username,
//	    display_name,
//	    password,
//	    created_at,
//	    updated_at
//	FROM users
//	WHERE email = $1
func (q *Queries) GetUserByEmail(ctx context.Context, db DBTX, email string) (*User, error) {
	row := db.QueryRow(ctx, getUserByEmail, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Username,
		&i.DisplayName,
		&i.Password,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}

const getUserByID = `-- name: GetUserByID :one
SELECT
    id,
    email,
    username,
    display_name,
    password,
    created_at,
    updated_at
FROM users
WHERE id = $1
`

// Gets a user by their ID.
//
//	SELECT
//	    id,
//	    email,
//	    username,
//	    display_name,
//	    password,
//	    created_at,
//	    updated_at
//	FROM users
//	WHERE id = $1
func (q *Queries) GetUserByID(ctx context.Context, db DBTX, id pgtype.UUID) (*User, error) {
	row := db.QueryRow(ctx, getUserByID, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Username,
		&i.DisplayName,
		&i.Password,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}

const getUserByUsername = `-- name: GetUserByUsername :one
SELECT
    id,
    email,
    username,
    display_name,
    password,
    created_at,
    updated_at
FROM users
WHERE username = $1
`

// Gets a user by their username.
//
//	SELECT
//	    id,
//	    email,
//	    username,
//	    display_name,
//	    password,
//	    created_at,
//	    updated_at
//	FROM users
//	WHERE username = $1
func (q *Queries) GetUserByUsername(ctx context.Context, db DBTX, username string) (*User, error) {
	row := db.QueryRow(ctx, getUserByUsername, username)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Username,
		&i.DisplayName,
		&i.Password,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}
